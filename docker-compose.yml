services:
  postgres:
    image: postgres:16-alpine
    container_name: mini-erp-postgres
    restart: unless-stopped
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: mini_erp
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - mini-erp-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile.dev
    container_name: mini-erp-backend
    restart: unless-stopped
    ports:
      - "3000:3000"
    environment:
      NODE_ENV: development
      PORT: 3000
      DB_HOST: postgres
      DB_PORT: 5432
      DB_USERNAME: postgres
      DB_PASSWORD: postgres
      DB_DATABASE: mini_erp
      JWT_SECRET: your-super-secret-jwt-key-change-in-production
      JWT_EXPIRATION: 1d
    volumes:
      - ./backend:/app
      - /app/node_modules
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - mini-erp-network

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile.dev
    container_name: mini-erp-frontend
    restart: unless-stopped
    ports:
      - "4200:4200"
    environment:
      NODE_ENV: development
    volumes:
      - ./frontend:/app
      - /app/node_modules
    depends_on:
      - backend
    networks:
      - mini-erp-network

networks:
  mini-erp-network:
    driver: bridge
    name: mini-erp-network

volumes:
  postgres_data:
    name: mini-erp-postgres-data
